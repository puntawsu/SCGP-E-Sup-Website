@use '../utils' as *;
h1,
h2,
h3,
h4,
h5,
h6 {
  color: $text-color-1;
  margin-top: 0px;
  font-weight: var(--tp-fw-bold);
  line-height: 1.2;
}

* {
  font-family: 'SCG' !important;
  letter-spacing: 0.5px;
}

input[type='text'],
input[type='email'],
input[type='tel'],
input[type='number'],
input[type='password'],
textarea {
  outline: none;
  background-color: #fff;
  height: 40px;
  width: 100%;
  line-height: 54px;
  font-size: 16px;
  border: var(--bs-border-width) solid var(--bs-border-color);
  color: var(--tp-common-black);
  padding-left: 20px;
  padding-right: 29px;
}

.red-mark {
  color: red;
  font-size: 1rem;
  font-weight: 700;
}

.was-validated .form-control:valid,
.form-control.is-valid {
  border-color: unset;
  padding-right: calc(1.5em + 0.75rem);
  background-image: unset;
  background-repeat: no-repeat;
  background-position: right calc(0.375em + 0.1875rem) center;
  background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
}

.was-validated .form-control:valid:focus,
.form-control.is-valid:focus {
  border-color: unset;
  box-shadow: unset;
}

.hide-on-mobile {
  @media (max-width: 768px) {
    display: none !important;
  }
}

.hide-on-web {
  @media (min-width: 769px) {
    display: none !important;
  }
}

@media (max-width: 768px) {
  p {
    font-size: 14px;
  }
}

.logo-border {
  &::after {
    background-color: transparent !important;
  }
}

.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.8);
  /* สีพื้นหลังที่มีความโปร่งแสง */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
  /* ให้อยู่ด้านบนสุด */
}

.loader {
  border: 16px solid #f3f3f3;
  border-radius: 50%;
  border-top: 16px solid #3498db;
  width: 120px;
  height: 120px;
  animation: spin 2s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

#CustomModal {
  .modal-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .modal-content {
    background: white;
    padding: 20px;
    border-radius: 8px;
    width: 50%;
    position: relative;
    transition: opacity 0.5s;
    .header {
      display: flex;
      justify-content: end;
      align-items: center;
      .close {
        cursor: pointer;
        font-size: 20px;
        color: #000;
      }
    }
    .footer {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-top: 20px;
      .btn {
        transition: all 0.7s ease-in-out;
        width: 20%;
        padding: 0.5rem 0;
        background: linear-gradient(
          120deg,
          $warning-color-2,
          $warning-color-1,
          $primary-color-2 50%
        );
        background-size: 350% auto;
        background-position: center right;
        color: #fff;
        border: unset;
        &:hover {
          background-position: center left;
          box-shadow: 1px 1px 6px 1px #00000099;
          color: #fff;
        }
      }
    }
  }
  @media (max-width: 767px) {
    .modal-content {
      width: 90%;
    }
  }
  /* Transition Styles */
  .fade-enter-active,
  .fade-leave-active {
    transition: opacity 0.5s;
  }
  .fade-enter,
    .fade-leave-to/* .fade-leave-active in <2.1.8 */ {
    opacity: 0;
  }
}

// Define fade-in animation
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-20px); // Move from left
  }
  to {
    opacity: 1;
    transform: translateX(0); // End at original position
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(20px); // Move from right
  }
  to {
    opacity: 1;
    transform: translateX(0); // End at original position
  }
}

@keyframes fadeInTop {
  from {
    opacity: 0;
    transform: translateY(-20px); // Move from top
  }
  to {
    opacity: 1;
    transform: translateY(0); // End at original position
  }
}

// Mixin for fade-in classes with delay
@mixin fade-in-delay($delay) {
  animation: fadeIn 1s ease-in-out forwards;
  animation-delay: #{$delay}ms; // Ensure variable is interpolated properly
  opacity: 0;
}

@mixin fade-in-direction($animation, $delay) {
  animation: #{$animation} 1s ease-in-out forwards;
  animation-delay: #{$delay}ms;
  opacity: 0;
}

// Generate classes with delays from 500ms to 9000ms
@for $i from 1 through 30 {
  .anifadein-#{$i * 100} {
    @include fade-in-delay($i * 100);
  }
  .anifadein-left-#{$i * 100} {
    @include fade-in-direction(fadeInLeft, $i * 100);
  }
  // Fade-in from Right
  .anifadein-right-#{$i * 100} {
    @include fade-in-direction(fadeInRight, $i * 100);
  }
  // Fade-in from Top
  .anifadein-top-#{$i * 100} {
    @include fade-in-direction(fadeInTop, $i * 100);
  }
  // Fade-in from Bottom
  .anifadein-bottom-#{$i * 100} {
    @include fade-in-direction(fadeInBottom, $i * 100);
  }
}
